{
  "name": "Git-task",
  "tagline": "Manage tasks with a local website in a Git repository and a git command line extension.",
  "body": "# git-task\r\n\r\nManage tasks with a local website in a Git repository and a git command line extension.\r\n\r\n## Why?\r\n\r\n- Offline management of tasks related to a project.\r\n- Tasks are inside the same git repository.\r\n- Tasks are each a plain text JSON file, friendly format for reading, merging, or even changing.\r\n- Ensure that every time you commit, the tasks changed are also included in the commit. Thus, no need for \r\nassociating tasks and commits manually. Of course, multiple tasks can be included in a single commit.\r\n- Provide a standardized way for the automation of task processing.\r\n- Provide git extensions for task management.\r\n- Synchronize tasks with online issue trackers (GitHub, JIRA, Trello, VS Team System, etc). *Coming soon!*\r\n\r\n## Getting started\r\n\r\n### Installation\r\n\r\ngit-task requires [Git](https://git-scm.com/) and [Node.js](https://nodejs.org/) (recommended v.4.4.7 or greater), \r\nbut an Internet connection or *npm* repository is not needed, since you can copy the git-task package in a compressed \r\nfile from somebody else, for example.\r\n\r\n#### Via GitHub\r\n\r\nClone the git-task GitHub repository (or download the [zip file](http://github.com/kuritsu/git-task/archive/master.zip)): \r\n\r\n``` bash\r\n$ git clone https://github.com/kuritsu/git-task\r\n```\r\n\r\nAnd then:\r\n\r\n#### Via NPM \r\n  \r\nRun *npm* from the folder of your git repository (or use *-g* if you want it globally installed - see\r\n```npm help install``` for more details):\r\n\r\n``` bash\r\n$ npm install git-plugin-task\r\n```\r\n\r\nor\r\n\r\n``` bash\r\n$ npm install git_task_folder\r\n```\r\n\r\nor\r\n \r\n``` bash\r\n$ npm install git-task.tar.gz\r\n```\r\n\r\n### Enable a git-task repository\r\n\r\n#### Setting the environment\r\n\r\n##### Linux/iOS:\r\n\r\nLocate the git-task Node.js script either in:\r\n\r\n- The Node.js locally installed modules: /path/to/your/project/node_modules/git-plugin-task/bin\r\n \r\nor \r\n\r\n- The global Node.js modules: /path/to/your/nodejs/home/lib/node_modules/git-plugin-task/bin\r\n\r\nMake sure that the git-task script (Node.js) has execution permissions (```chmod a+x path/to/git-task```).\r\n\r\nThen include that directory in your PATH environment variable (i.e., use \r\n```export PATH=$PATH:path_to_git_task_script_dir``` in a Bash session or add it in your ```~/.bashrc``` \r\nor ```~/.profile``` files and then reopen/reload a shell session).\r\n\r\n##### Windows:\r\n\r\n*Comming soon!*\r\n\r\n#### Initializing and running git-task\r\n\r\nNow you should be able to run at your git repository:\r\n\r\n``` bash\r\n$ git-task init\r\n```\r\n\r\nor for a more git-like alternative: \r\n\r\n``` bash\r\n$ git task init\r\n```\r\n\r\nThis command copies all the git-task required files to a *.task* directory under your git repository. \r\nThen, run the following command for starting the git-task server (website hosting service):\r\n\r\n``` bash\r\n$ git task start\r\n```\r\n\r\nBy default, as you can see in *.tasks/config.js*, the hosted service starts at *http://localhost:16100*.\r\nYou can change this by modifying that file.\r\n\r\n**NOTICE:** This must be done in a git-enabled folder. If no valid .git directory is found, the git-task commands\r\nwill fail.\r\n\r\nOpen a web browser and enter the site address: *http://localhost:16100*. You should see a web page like this:\r\n\r\n<img src=\"https://github.com/kuritsu/git-task/blob/master/images/screenshot1.png\" alt=\"git-task web page\" />\r\n\r\nYou can stop the server executing:\r\n\r\n``` bash\r\n$ git task stop\r\n```\r\n\r\nBy default the PID (process ID) of the running server is stored in the *.tasks/server.pid* file, and you can view \r\nthe server log at *.tasks/server.log*.\r\n\r\n### Creating tasks\r\n\r\nClick the *New task* link. A new task is created and you can edit its title. Press Enter or \r\nclick outside the task to stop editing.\r\n\r\n### Modifying tasks\r\n\r\nClick the title, pending, estimation hours or tag labels to edit them directly in the \r\ntask item. Click the *E* link in a task item to display a task editor.\r\n\r\n### Adding and removing task fields\r\n\r\nTo add a new field to a task, open the task editor (*E* link in the task item), and click the *Add field* link. \r\nCheck the *To all tasks* box if you want to add the field to all existing tasks. Enter the field name and its default\r\nvalue when asked.\r\n\r\nTo remove an existing field, click the *X* link next to the field name in the task editor form, and confirm your\r\naction when asked. Notice that this action also asks to confirm the deletion of the field in all tasks but not just\r\nthe one in edition.\r\n \r\n### Deleting tasks\r\n\r\nClick the *M* link and select the *Delete task* option. The task should now be deleted - thus, the file doesn't\r\nexist and will not be included in a commit.\r\n\r\n### Git status of tasks\r\n\r\nEach task is painted with a specific background color. Read the end of the page for knowing what each color means. \r\nBy default:\r\n\r\n- <span style=\"background-color:#b8fffa\">Light blue</span>: Unchanged (no addition or modifications).\r\n- <span style=\"background-color:#fffc51\">Yellow</span>: Added (added to git - not still committed).\r\n- <span style=\"background-color:#ff9270\">Light red</span>: Modified (already exists in the git repository, and it has \r\nbeen modified).\r\n- <span style=\"background-color:#20B2AA\">Green</span>: Not included (can be unchanged, added or modified, \r\nbut it is NOT included in the commit).  \r\n\r\n### Commit\r\n\r\nYou can commit all the project using ```git commit``` from a shell standing at the git repository or \r\nusing an IDE. The tasks you modified or added should already be included in the commit.\r\n\r\nYou can also commit only the *.tasks* folder (to either commit the git-task site's code, styles or just the tasks \r\nthemselves). This is done by clicking the \"Commit\" link at the menu bar. A dialog is shown to allow you \r\ninclude a commit message. \r\n  \r\n### Excluding tasks from commit\r\n\r\nYou can exclude one or several tasks you added/modified from a commit. Click in the *M* link \r\nof the task item and select *Exclude from commit*. The task should have a different color now.\r\n\r\nChoose *Include in commit* to undo this operation.\r\n\r\n### Discarding changes in tasks\r\n\r\nChanges in tasks can be discarded from git after you click the *M* link of the task and choose *Discard changes*.\r\nThe task will lose all the changes you made and restore it (via ```git checkout```).\r\n\r\n### Sorting tasks\r\n\r\nChoose an option from the *- Sort here -* combobox, and the tasks will be sorted by that property. Check/uncheck the \r\n*Reverse* box for inverting the current sort order.\r\n\r\n### Filtering tasks\r\n\r\nWrite a text in the *Filter / search here* textbox to filter the tasks shown in the page. All task attributes are \r\nincluded in the filter (ids, title, tags, etc). \r\n\r\n### Mass-adding and mass-removing tags\r\n\r\n**NOTICE**: Mass-adding and mass-removing tags affect all tasks displayed in the page. Don't use this feature \r\nunless you filter the tasks before. \r\n\r\nTags can be added or removed from a set of (or all) tasks. Type tag names separated by commas in the \r\n*tag1,tag2,-tag3,-tag4* textbox and press Enter to add the tag(s). Prepend the tag name with a *-* to \r\nremove the tag. When you press Enter all visible tasks are modified with the new tags added or removed. \r\nThis causes the tasks to be updated (changed in git).\r\n\r\n### Add a README to the web page\r\n\r\nA README.md (Markdown) can be added to the .tasks folder and will be displayed at the end of the web page.\r\nUse your preferred editor to change it.  \r\n\r\n## Bugs\r\n\r\nEnter [git-task issues](http://github.com/kuritsu/git-task/issues) or use git-task locally and push the code!!! \r\n\r\n## License (MIT)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\r\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\r\nthe rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of \r\nthe Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\r\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\r\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\nOTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}